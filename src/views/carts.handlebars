<h1>Carrito de Compras</h1>

<div class="container">
    {{#each productos}}
    <div class="card mb-3">
        <div class="card-body">
            <h5 class="card-title">Producto: {{this.product.title}}</h5>
            <p class="card-text">Cantidad: {{this.quantity}}</p>
            <p class="card-text">Precio: ${{this.product.totalPrice}}</p>
            <button onclick="actualizarCantidad('{{../cartId}}', '{{this.product._id}}', {{this.quantity}} - 1)"
                class="btn btn-secondary">-</button>
            <button onclick="actualizarCantidad('{{../cartId}}', '{{this.product._id}}', {{this.quantity}} + 1)"
                class="btn btn-secondary">+</button>
            <button onclick="eliminarProducto('{{../cartId}}', '{{this.product._id}}')"
                class="btn btn-danger">Eliminar</button>
        </div>
    </div>
    {{/each}}
</div>
<div class="btnCarrito mb-3">
   <button onclick="vaciarCarrito('{{cartId}}')" class="btn btn-danger">Vaciar Carrito</button>
    <button onclick="location.href='/products'" class="btn btn-primary">Seguir Comprando</button>
    <button onclick="finalizarCompra('{{cartId}}')" class="btn btn-success">Finalizar Compra</button> 
</div>

<h3 class="totalCompra">Total de la compra: ${{totalCompra}}</h3>

<script>
    function actualizarCantidad(cartId, productId, newQuantity) {
        fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ quantity: newQuantity })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al actualizar la cantidad');
            }
            return response.json();
        })
        .then(data => {
            console.log('Cantidad actualizada:', data);
            window.location.reload(); // Recargar la página para reflejar los cambios
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    function eliminarProducto(cartId, productId) {
        fetch(`/api/carts/${cartId}/product/${productId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al eliminar el producto del carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function vaciarCarrito(cartId) {
        fetch(`/api/carts/${cartId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error al vaciar el carrito');
                }
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function finalizarCompra(cartId) {
        // Obtener los valores de cliente, numTicket y email
        const cliente = "Nombre del cliente";  // Reemplazar con la lógica para obtener el cliente
        const numTicket = "Número de ticket";  // Reemplazar con la lógica para obtener el número de ticket
        const email = "Correo electrónico del cliente";  // Reemplazar con la lógica para obtener el email

        fetch(`/api/carts/${cartId}/purchase`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                cartId: cartId,
                cliente: cliente,
                numTicket: numTicket,
                email: email
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error al finalizar la compra');
            }
            return response.json();
        })
        .then(data => {
            console.log('Compra finalizada:', data);
            if (data.success) {
                // Redirigir a la página de checkout
                window.location.href = `/checkout?ticket=${data.ticket}&cliente=${cliente}&email=${email}`;
            } else {
                throw new Error('No se pudo finalizar la compra');
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    

</script>
